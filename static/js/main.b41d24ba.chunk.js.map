{"version":3,"sources":["Components/Header.js","Components/EnterTodo.js","Components/ShowTodo.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","EnterTodo","props","state","task","e","this","setState","target","value","recData","keyCode","trim","length","alert","sendData","type","placeholder","onKeyDown","checkKeycode","onChange","handleInput","Component","ShowTodo","List","list","JSON","parse","localStorage","getItem","index","isCompleted","setItem","stringify","newTodo","newList","ind","todoList","splice","updateList","map","data","todo","checked","handleCheck","onClick","DeleteTask","Math","random","Footer","App","todos","isDeleted","push","newTodos","recTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b41d24ba.chunk.js","sourcesContent":["export default function Header() {\r\n  return <div className=\"header\">Todo List</div>;\r\n}\r\n","import { Component } from \"react\";\r\n\r\nclass EnterTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput(e) {\r\n    this.setState({ task: e.target.value });\r\n  }\r\n\r\n  sendData(task) {\r\n    this.props.recData(task);\r\n  }\r\n\r\n  checkKeycode(e) {\r\n    if (e.keyCode === 13) {\r\n      //console.log(e.target.value.trim().length === 0);\r\n      if (e.target.value.trim().length === 0) {\r\n        alert(\"invalid task Please Enter some Task \");\r\n        return;\r\n      }\r\n\r\n      this.sendData(this.state.task);\r\n      this.setState({ task: \"\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const task = this.state.task;\r\n    return (\r\n      <div className=\"enterTask\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your Tasks here\"\r\n          value={task}\r\n          onKeyDown={(e) => this.checkKeycode(e)}\r\n          onChange={(e) => this.handleInput(e)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnterTodo;\r\n","import { Component } from \"react\";\r\n\r\nclass ShowTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      List: this.props,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let list = JSON.parse(localStorage.getItem(\"todos\"));\r\n    this.setState({\r\n      List: list,\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props !== state) {\r\n      return props;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleCheck(index) {\r\n    let task = this.state.List;\r\n    task[index].isCompleted = !task[index].isCompleted;\r\n    localStorage.setItem(\"todos\", JSON.stringify(task));\r\n    this.setState({\r\n      List: task,\r\n    });\r\n  }\r\n\r\n  updateList(newTodo) {\r\n    this.props.newList(newTodo);\r\n  }\r\n\r\n  DeleteTask(ind) {\r\n    let todoList = this.state.List;\r\n    todoList.splice(ind, 1);\r\n    localStorage.setItem(\"todos\", JSON.stringify(todoList));\r\n    this.setState({\r\n      List: todoList,\r\n    });\r\n    this.updateList(this.state.List);\r\n  }\r\n\r\n  render() {\r\n    //let task = JSON.parse(localStorage.getItem(\"todos\"));\r\n    const task = this.state.List.map((data, ind) => {\r\n      return (\r\n        <div key={Math.random() * ind} className=\"task\">\r\n          <div className={data.isCompleted ? \"completed\" : \"null\"}>\r\n            {data.todo}\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={data.isCompleted}\r\n              onChange={() => this.handleCheck(ind)}\r\n            />\r\n            <button onClick={() => this.DeleteTask(ind)}> delete </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return <div className=\"todoList\">{task}</div>;\r\n  }\r\n}\r\n\r\nexport default ShowTodo;\r\n","export default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <label>\r\n        {\" \"}\r\n        Made By Sachin Pundir with <span>‚ù§</span>{\" \"}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","//import logo from './logo.svg';\nimport React, { Component } from \"react\";\nimport Header from \"./Components/Header\";\nimport EnterTodo from \"./Components/EnterTodo\";\nimport ShowTodo from \"./Components/ShowTodo\";\nimport Footer from \"./Components/Footer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let todoList = JSON.parse(localStorage.getItem(\"todos\"));\n    if (todoList) {\n    } else {\n      todoList = [];\n    }\n    this.state = {\n      todos: todoList,\n    };\n  }\n\n  componentDidMount() {\n    let List = JSON.parse(localStorage.getItem(\"todos\"));\n    if (List) {\n      this.setState({ todos: List });\n    } else {\n      List = [];\n      localStorage.setItem(\"todos\", List);\n    }\n  }\n\n  recTask(task) {\n    let { todos } = this.state;\n    let List = {\n      todo: task,\n      isCompleted: false,\n      isDeleted: false,\n    };\n    todos.push(List);\n    this.setState({ todos: todos });\n  }\n\n  updateList(newTodos) {\n    this.setState({\n      todos: newTodos,\n    });\n  }\n\n  render() {\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));    \n    const todoList = this.state.todos;\n\n    return (\n      <div className=\"app\">\n        <Header />\n        <EnterTodo recData={(task) => this.recTask(task)} />\n        <ShowTodo\n          List={todoList}\n          newList={(newTodos) => this.updateList(newTodos)}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}